/*
 * generated by Xtext 2.24.0
 */
grammar InternalLobsterLanguages;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package kcl.mmdd.course.languages.lobster.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package kcl.mmdd.course.languages.lobster.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import kcl.mmdd.course.languages.lobster.services.LobsterLanguagesGrammarAccess;

}
@parser::members {
	private LobsterLanguagesGrammarAccess grammarAccess;

	public void setGrammarAccess(LobsterLanguagesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLobsterProgram
entryRuleLobsterProgram
:
{ before(grammarAccess.getLobsterProgramRule()); }
	 ruleLobsterProgram
{ after(grammarAccess.getLobsterProgramRule()); } 
	 EOF 
;

// Rule LobsterProgram
ruleLobsterProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLobsterProgramAccess().getStatementsAssignment()); }
		(rule__LobsterProgram__StatementsAssignment)*
		{ after(grammarAccess.getLobsterProgramAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableCharacter
entryRuleVariableCharacter
:
{ before(grammarAccess.getVariableCharacterRule()); }
	 ruleVariableCharacter
{ after(grammarAccess.getVariableCharacterRule()); } 
	 EOF 
;

// Rule VariableCharacter
ruleVariableCharacter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableCharacterAccess().getGroup()); }
		(rule__VariableCharacter__Group__0)
		{ after(grammarAccess.getVariableCharacterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateDatabaseStatement
entryRuleCreateDatabaseStatement
:
{ before(grammarAccess.getCreateDatabaseStatementRule()); }
	 ruleCreateDatabaseStatement
{ after(grammarAccess.getCreateDatabaseStatementRule()); } 
	 EOF 
;

// Rule CreateDatabaseStatement
ruleCreateDatabaseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateDatabaseStatementAccess().getGroup()); }
		(rule__CreateDatabaseStatement__Group__0)
		{ after(grammarAccess.getCreateDatabaseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateTableStatement
entryRuleCreateTableStatement
:
{ before(grammarAccess.getCreateTableStatementRule()); }
	 ruleCreateTableStatement
{ after(grammarAccess.getCreateTableStatementRule()); } 
	 EOF 
;

// Rule CreateTableStatement
ruleCreateTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateTableStatementAccess().getGroup()); }
		(rule__CreateTableStatement__Group__0)
		{ after(grammarAccess.getCreateTableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateTableColumn
entryRuleCreateTableColumn
:
{ before(grammarAccess.getCreateTableColumnRule()); }
	 ruleCreateTableColumn
{ after(grammarAccess.getCreateTableColumnRule()); } 
	 EOF 
;

// Rule CreateTableColumn
ruleCreateTableColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateTableColumnAccess().getGroup()); }
		(rule__CreateTableColumn__Group__0)
		{ after(grammarAccess.getCreateTableColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsertStatement
entryRuleInsertStatement
:
{ before(grammarAccess.getInsertStatementRule()); }
	 ruleInsertStatement
{ after(grammarAccess.getInsertStatementRule()); } 
	 EOF 
;

// Rule InsertStatement
ruleInsertStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertStatementAccess().getGroup()); }
		(rule__InsertStatement__Group__0)
		{ after(grammarAccess.getInsertStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteDataStatement
entryRuleDeleteDataStatement
:
{ before(grammarAccess.getDeleteDataStatementRule()); }
	 ruleDeleteDataStatement
{ after(grammarAccess.getDeleteDataStatementRule()); } 
	 EOF 
;

// Rule DeleteDataStatement
ruleDeleteDataStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteDataStatementAccess().getGroup()); }
		(rule__DeleteDataStatement__Group__0)
		{ after(grammarAccess.getDeleteDataStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMoreConditionStatement
entryRuleMoreConditionStatement
:
{ before(grammarAccess.getMoreConditionStatementRule()); }
	 ruleMoreConditionStatement
{ after(grammarAccess.getMoreConditionStatementRule()); } 
	 EOF 
;

// Rule MoreConditionStatement
ruleMoreConditionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMoreConditionStatementAccess().getGroup()); }
		(rule__MoreConditionStatement__Group__0)
		{ after(grammarAccess.getMoreConditionStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeleteTableStatement
entryRuleDeleteTableStatement
:
{ before(grammarAccess.getDeleteTableStatementRule()); }
	 ruleDeleteTableStatement
{ after(grammarAccess.getDeleteTableStatementRule()); } 
	 EOF 
;

// Rule DeleteTableStatement
ruleDeleteTableStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteTableStatementAccess().getGroup()); }
		(rule__DeleteTableStatement__Group__0)
		{ after(grammarAccess.getDeleteTableStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateStatement
entryRuleUpdateStatement
:
{ before(grammarAccess.getUpdateStatementRule()); }
	 ruleUpdateStatement
{ after(grammarAccess.getUpdateStatementRule()); } 
	 EOF 
;

// Rule UpdateStatement
ruleUpdateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getGroup()); }
		(rule__UpdateStatement__Group__0)
		{ after(grammarAccess.getUpdateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectStatement
entryRuleSelectStatement
:
{ before(grammarAccess.getSelectStatementRule()); }
	 ruleSelectStatement
{ after(grammarAccess.getSelectStatementRule()); } 
	 EOF 
;

// Rule SelectStatement
ruleSelectStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectStatementAccess().getGroup()); }
		(rule__SelectStatement__Group__0)
		{ after(grammarAccess.getSelectStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionStatement
entryRuleConditionStatement
:
{ before(grammarAccess.getConditionStatementRule()); }
	 ruleConditionStatement
{ after(grammarAccess.getConditionStatementRule()); } 
	 EOF 
;

// Rule ConditionStatement
ruleConditionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionStatementAccess().getGroup()); }
		(rule__ConditionStatement__Group__0)
		{ after(grammarAccess.getConditionStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharLiteral
entryRuleCharLiteral
:
{ before(grammarAccess.getCharLiteralRule()); }
	 ruleCharLiteral
{ after(grammarAccess.getCharLiteralRule()); } 
	 EOF 
;

// Rule CharLiteral
ruleCharLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharLiteralAccess().getVacAssignment()); }
		(rule__CharLiteral__VacAssignment)
		{ after(grammarAccess.getCharLiteralAccess().getVacAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValAssignment()); }
		(rule__IntLiteral__ValAssignment)
		{ after(grammarAccess.getIntLiteralAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableReference
entryRuleVariableReference
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getVarAssignment()); }
		(rule__VariableReference__VarAssignment)
		{ after(grammarAccess.getVariableReferenceAccess().getVarAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MoreCondition
ruleMoreCondition
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoreConditionAccess().getAlternatives()); }
		(rule__MoreCondition__Alternatives)
		{ after(grammarAccess.getMoreConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CaculateCondition
ruleCaculateCondition
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaculateConditionAccess().getAlternatives()); }
		(rule__CaculateCondition__Alternatives)
		{ after(grammarAccess.getCaculateConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Order
ruleOrder
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getAlternatives()); }
		(rule__Order__Alternatives)
		{ after(grammarAccess.getOrderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getCreateDatabaseStatementParserRuleCall_0()); }
		ruleCreateDatabaseStatement
		{ after(grammarAccess.getStatementAccess().getCreateDatabaseStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCreateTableStatementParserRuleCall_1()); }
		ruleCreateTableStatement
		{ after(grammarAccess.getStatementAccess().getCreateTableStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getInsertStatementParserRuleCall_2()); }
		ruleInsertStatement
		{ after(grammarAccess.getStatementAccess().getInsertStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteDataStatementParserRuleCall_3()); }
		ruleDeleteDataStatement
		{ after(grammarAccess.getStatementAccess().getDeleteDataStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeleteTableStatementParserRuleCall_4()); }
		ruleDeleteTableStatement
		{ after(grammarAccess.getStatementAccess().getDeleteTableStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_5()); }
		ruleUpdateStatement
		{ after(grammarAccess.getStatementAccess().getUpdateStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectStatementParserRuleCall_6()); }
		ruleSelectStatement
		{ after(grammarAccess.getStatementAccess().getSelectStatementParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getVariableCharacterParserRuleCall_7()); }
		ruleVariableCharacter
		{ after(grammarAccess.getStatementAccess().getVariableCharacterParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getIntLiteralParserRuleCall_0()); }
		ruleIntLiteral
		{ after(grammarAccess.getPrimaryExpressionAccess().getIntLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getCharLiteralParserRuleCall_1()); }
		ruleCharLiteral
		{ after(grammarAccess.getPrimaryExpressionAccess().getCharLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_2()); }
		ruleVariableReference
		{ after(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getIntegerEnumLiteralDeclaration_0()); }
		('Integer')
		{ after(grammarAccess.getDataTypeAccess().getIntegerEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getCharacterEnumLiteralDeclaration_1()); }
		('Character')
		{ after(grammarAccess.getDataTypeAccess().getCharacterEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoreConditionAccess().getAndEnumLiteralDeclaration_0()); }
		('and')
		{ after(grammarAccess.getMoreConditionAccess().getAndEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMoreConditionAccess().getOrEnumLiteralDeclaration_1()); }
		('or')
		{ after(grammarAccess.getMoreConditionAccess().getOrEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMoreConditionAccess().getFinishEnumLiteralDeclaration_2()); }
		('finish')
		{ after(grammarAccess.getMoreConditionAccess().getFinishEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaculateCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaculateConditionAccess().getMaximumEnumLiteralDeclaration_0()); }
		('maximum')
		{ after(grammarAccess.getCaculateConditionAccess().getMaximumEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCaculateConditionAccess().getMinimumEnumLiteralDeclaration_1()); }
		('minimum')
		{ after(grammarAccess.getCaculateConditionAccess().getMinimumEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCaculateConditionAccess().getAverageEnumLiteralDeclaration_2()); }
		('average')
		{ after(grammarAccess.getCaculateConditionAccess().getAverageEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCaculateConditionAccess().getCountEnumLiteralDeclaration_3()); }
		('count')
		{ after(grammarAccess.getCaculateConditionAccess().getCountEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCaculateConditionAccess().getSumEnumLiteralDeclaration_4()); }
		('sum')
		{ after(grammarAccess.getCaculateConditionAccess().getSumEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getAscendingEnumLiteralDeclaration_0()); }
		('ascending')
		{ after(grammarAccess.getOrderAccess().getAscendingEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderAccess().getDescendingEnumLiteralDeclaration_1()); }
		('descending')
		{ after(grammarAccess.getOrderAccess().getDescendingEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableCharacter__Group__0__Impl
	rule__VariableCharacter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableCharacterAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableCharacterAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableCharacter__Group__1__Impl
	rule__VariableCharacter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableCharacterAccess().getNameAssignment_1()); }
	(rule__VariableCharacter__NameAssignment_1)
	{ after(grammarAccess.getVariableCharacterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableCharacter__Group__2__Impl
	rule__VariableCharacter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableCharacterAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableCharacterAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableCharacter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableCharacterAccess().getValueAssignment_3()); }
	(rule__VariableCharacter__ValueAssignment_3)
	{ after(grammarAccess.getVariableCharacterAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateDatabaseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStatement__Group__0__Impl
	rule__CreateDatabaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStatementAccess().getCreateKeyword_0()); }
	'Create'
	{ after(grammarAccess.getCreateDatabaseStatementAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStatement__Group__1__Impl
	rule__CreateDatabaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStatementAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getCreateDatabaseStatementAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStatement__Group__2__Impl
	rule__CreateDatabaseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStatementAccess().getDatabaseKeyword_2()); }
	'database'
	{ after(grammarAccess.getCreateDatabaseStatementAccess().getDatabaseKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStatement__Group__3__Impl
	rule__CreateDatabaseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStatementAccess().getNamedKeyword_3()); }
	'named'
	{ after(grammarAccess.getCreateDatabaseStatementAccess().getNamedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateDatabaseStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateDatabaseStatementAccess().getDbnameAssignment_4()); }
	(rule__CreateDatabaseStatement__DbnameAssignment_4)
	{ after(grammarAccess.getCreateDatabaseStatementAccess().getDbnameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateTableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__0__Impl
	rule__CreateTableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getCreateKeyword_0()); }
	'Create'
	{ after(grammarAccess.getCreateTableStatementAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__1__Impl
	rule__CreateTableStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getAKeyword_1()); }
	'a'
	{ after(grammarAccess.getCreateTableStatementAccess().getAKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__2__Impl
	rule__CreateTableStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getTableKeyword_2()); }
	'table'
	{ after(grammarAccess.getCreateTableStatementAccess().getTableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__3__Impl
	rule__CreateTableStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getNamedKeyword_3()); }
	'named'
	{ after(grammarAccess.getCreateTableStatementAccess().getNamedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__4__Impl
	rule__CreateTableStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getTbnameAssignment_4()); }
	(rule__CreateTableStatement__TbnameAssignment_4)
	{ after(grammarAccess.getCreateTableStatementAccess().getTbnameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__5__Impl
	rule__CreateTableStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getCreateTableStatementAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__6__Impl
	rule__CreateTableStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getDbnameAssignment_6()); }
	(rule__CreateTableStatement__DbnameAssignment_6)
	{ after(grammarAccess.getCreateTableStatementAccess().getDbnameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__7__Impl
	rule__CreateTableStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getIncludeKeyword_7()); }
	'include'
	{ after(grammarAccess.getCreateTableStatementAccess().getIncludeKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__8__Impl
	rule__CreateTableStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getCreateTableStatementAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__9__Impl
	rule__CreateTableStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getColumnsAssignment_9()); }
	(rule__CreateTableStatement__ColumnsAssignment_9)*
	{ after(grammarAccess.getCreateTableStatementAccess().getColumnsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableStatement__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableStatementAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getCreateTableStatementAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateTableColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group__0__Impl
	rule__CreateTableColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getColumnNameKeyword_0()); }
	'Column Name:'
	{ after(grammarAccess.getCreateTableColumnAccess().getColumnNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group__1__Impl
	rule__CreateTableColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getColumnNameAssignment_1()); }
	(rule__CreateTableColumn__ColumnNameAssignment_1)
	{ after(grammarAccess.getCreateTableColumnAccess().getColumnNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group__2__Impl
	rule__CreateTableColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getCreateTableColumnAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group__3__Impl
	rule__CreateTableColumn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getDatatypeAssignment_3()); }
	(rule__CreateTableColumn__DatatypeAssignment_3)
	{ after(grammarAccess.getCreateTableColumnAccess().getDatatypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group__4__Impl
	rule__CreateTableColumn__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getCreateTableColumnAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group__5__Impl
	rule__CreateTableColumn__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getGroup_5()); }
	(rule__CreateTableColumn__Group_5__0)?
	{ after(grammarAccess.getCreateTableColumnAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getCommaKeyword_6()); }
	(',')?
	{ after(grammarAccess.getCreateTableColumnAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateTableColumn__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group_5__0__Impl
	rule__CreateTableColumn__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getCreateTableColumnAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group_5__1__Impl
	rule__CreateTableColumn__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getMaxKeyword_5_1()); }
	'max'
	{ after(grammarAccess.getCreateTableColumnAccess().getMaxKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group_5__2__Impl
	rule__CreateTableColumn__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getSizeAssignment_5_2()); }
	(rule__CreateTableColumn__SizeAssignment_5_2)
	{ after(grammarAccess.getCreateTableColumnAccess().getSizeAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group_5__3__Impl
	rule__CreateTableColumn__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getCharactersKeyword_5_3()); }
	'characters'
	{ after(grammarAccess.getCreateTableColumnAccess().getCharactersKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTableColumn__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableColumnAccess().getRightParenthesisKeyword_5_4()); }
	')'
	{ after(grammarAccess.getCreateTableColumnAccess().getRightParenthesisKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__0__Impl
	rule__InsertStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getInsertKeyword_0()); }
	'Insert'
	{ after(grammarAccess.getInsertStatementAccess().getInsertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__1__Impl
	rule__InsertStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getValueKeyword_1()); }
	'value'
	{ after(grammarAccess.getInsertStatementAccess().getValueKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__2__Impl
	rule__InsertStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInsertStatementAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__3__Impl
	rule__InsertStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getGroup_3()); }
	(rule__InsertStatement__Group_3__0)*
	{ after(grammarAccess.getInsertStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__4__Impl
	rule__InsertStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInsertStatementAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__5__Impl
	rule__InsertStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getIntoKeyword_5()); }
	'into'
	{ after(grammarAccess.getInsertStatementAccess().getIntoKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__6__Impl
	rule__InsertStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getTbnameAssignment_6()); }
	(rule__InsertStatement__TbnameAssignment_6)
	{ after(grammarAccess.getInsertStatementAccess().getTbnameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getTableKeyword_7()); }
	'table'
	{ after(grammarAccess.getInsertStatementAccess().getTableKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InsertStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_3__0__Impl
	rule__InsertStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getColumnNameKeyword_3_0()); }
	'Column Name:'
	{ after(grammarAccess.getInsertStatementAccess().getColumnNameKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_3__1__Impl
	rule__InsertStatement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getColumnAssignment_3_1()); }
	(rule__InsertStatement__ColumnAssignment_3_1)
	{ after(grammarAccess.getInsertStatementAccess().getColumnAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_3__2__Impl
	rule__InsertStatement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getIsKeyword_3_2()); }
	'is'
	{ after(grammarAccess.getInsertStatementAccess().getIsKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_3__3__Impl
	rule__InsertStatement__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getValueAssignment_3_3()); }
	(rule__InsertStatement__ValueAssignment_3_3)
	{ after(grammarAccess.getInsertStatementAccess().getValueAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InsertStatement__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertStatementAccess().getCommaKeyword_3_4()); }
	(',')?
	{ after(grammarAccess.getInsertStatementAccess().getCommaKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteDataStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteDataStatement__Group__0__Impl
	rule__DeleteDataStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteDataStatementAccess().getDeleteKeyword_0()); }
	'Delete'
	{ after(grammarAccess.getDeleteDataStatementAccess().getDeleteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteDataStatement__Group__1__Impl
	rule__DeleteDataStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteDataStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDeleteDataStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteDataStatement__Group__2__Impl
	rule__DeleteDataStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteDataStatementAccess().getConditionAssignment_2()); }
	(rule__DeleteDataStatement__ConditionAssignment_2)*
	{ after(grammarAccess.getDeleteDataStatementAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteDataStatement__Group__3__Impl
	rule__DeleteDataStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteDataStatementAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDeleteDataStatementAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteDataStatement__Group__4__Impl
	rule__DeleteDataStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteDataStatementAccess().getFromKeyword_4()); }
	'from'
	{ after(grammarAccess.getDeleteDataStatementAccess().getFromKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteDataStatement__Group__5__Impl
	rule__DeleteDataStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteDataStatementAccess().getTableKeyword_5()); }
	'Table'
	{ after(grammarAccess.getDeleteDataStatementAccess().getTableKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteDataStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteDataStatementAccess().getTbnameAssignment_6()); }
	(rule__DeleteDataStatement__TbnameAssignment_6)
	{ after(grammarAccess.getDeleteDataStatementAccess().getTbnameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MoreConditionStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoreConditionStatement__Group__0__Impl
	rule__MoreConditionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoreConditionStatementAccess().getColumnNameKeyword_0()); }
	'Column Name:'
	{ after(grammarAccess.getMoreConditionStatementAccess().getColumnNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoreConditionStatement__Group__1__Impl
	rule__MoreConditionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoreConditionStatementAccess().getColumnAssignment_1()); }
	(rule__MoreConditionStatement__ColumnAssignment_1)
	{ after(grammarAccess.getMoreConditionStatementAccess().getColumnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoreConditionStatement__Group__2__Impl
	rule__MoreConditionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoreConditionStatementAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getMoreConditionStatementAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoreConditionStatement__Group__3__Impl
	rule__MoreConditionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoreConditionStatementAccess().getValueAssignment_3()); }
	(rule__MoreConditionStatement__ValueAssignment_3)
	{ after(grammarAccess.getMoreConditionStatementAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MoreConditionStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMoreConditionStatementAccess().getMoreconditionAssignment_4()); }
	(rule__MoreConditionStatement__MoreconditionAssignment_4)
	{ after(grammarAccess.getMoreConditionStatementAccess().getMoreconditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteTableStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteTableStatement__Group__0__Impl
	rule__DeleteTableStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteTableStatementAccess().getDeleteAllFromKeyword_0()); }
	'Delete All From'
	{ after(grammarAccess.getDeleteTableStatementAccess().getDeleteAllFromKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteTableStatement__Group__1__Impl
	rule__DeleteTableStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteTableStatementAccess().getTbnameAssignment_1()); }
	(rule__DeleteTableStatement__TbnameAssignment_1)
	{ after(grammarAccess.getDeleteTableStatementAccess().getTbnameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeleteTableStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteTableStatementAccess().getTableKeyword_2()); }
	'Table'
	{ after(grammarAccess.getDeleteTableStatementAccess().getTableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__0__Impl
	rule__UpdateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }
	'Update'
	{ after(grammarAccess.getUpdateStatementAccess().getUpdateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__1__Impl
	rule__UpdateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getTbnameAssignment_1()); }
	(rule__UpdateStatement__TbnameAssignment_1)
	{ after(grammarAccess.getUpdateStatementAccess().getTbnameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__2__Impl
	rule__UpdateStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getTableKeyword_2()); }
	'Table'
	{ after(grammarAccess.getUpdateStatementAccess().getTableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__3__Impl
	rule__UpdateStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getSetKeyword_3()); }
	'set'
	{ after(grammarAccess.getUpdateStatementAccess().getSetKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__4__Impl
	rule__UpdateStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getUpdateStatementAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__5__Impl
	rule__UpdateStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getSetvalueAssignment_5()); }
	(rule__UpdateStatement__SetvalueAssignment_5)*
	{ after(grammarAccess.getUpdateStatementAccess().getSetvalueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__6__Impl
	rule__UpdateStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getUpdateStatementAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__7__Impl
	rule__UpdateStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getWhereKeyword_7()); }
	'where'
	{ after(grammarAccess.getUpdateStatementAccess().getWhereKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__8__Impl
	rule__UpdateStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getUpdateStatementAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__9__Impl
	rule__UpdateStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getConditionAssignment_9()); }
	(rule__UpdateStatement__ConditionAssignment_9)*
	{ after(grammarAccess.getUpdateStatementAccess().getConditionAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateStatement__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateStatementAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getUpdateStatementAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__0__Impl
	rule__SelectStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getFindOutKeyword_0()); }
	'Find out'
	{ after(grammarAccess.getSelectStatementAccess().getFindOutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__1__Impl
	rule__SelectStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_1()); }
	(rule__SelectStatement__Group_1__0)?
	{ after(grammarAccess.getSelectStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__2__Impl
	rule__SelectStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getColumnNameKeyword_2()); }
	'Column Name:'
	{ after(grammarAccess.getSelectStatementAccess().getColumnNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__3__Impl
	rule__SelectStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getColumnAssignment_3()); }
	(rule__SelectStatement__ColumnAssignment_3)
	{ after(grammarAccess.getSelectStatementAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__4__Impl
	rule__SelectStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getWhereKeyword_4()); }
	'where'
	{ after(grammarAccess.getSelectStatementAccess().getWhereKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__5__Impl
	rule__SelectStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getSelectStatementAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__6__Impl
	rule__SelectStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getConditionAssignment_6()); }
	(rule__SelectStatement__ConditionAssignment_6)*
	{ after(grammarAccess.getSelectStatementAccess().getConditionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__7__Impl
	rule__SelectStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getSelectStatementAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__8__Impl
	rule__SelectStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getFromKeyword_8()); }
	'from'
	{ after(grammarAccess.getSelectStatementAccess().getFromKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__9__Impl
	rule__SelectStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getTableKeyword_9()); }
	'Table'
	{ after(grammarAccess.getSelectStatementAccess().getTableKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__10__Impl
	rule__SelectStatement__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getTbnameAssignment_10()); }
	(rule__SelectStatement__TbnameAssignment_10)
	{ after(grammarAccess.getSelectStatementAccess().getTbnameAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__11__Impl
	rule__SelectStatement__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_11()); }
	(rule__SelectStatement__Group_11__0)?
	{ after(grammarAccess.getSelectStatementAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__12__Impl
	rule__SelectStatement__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_12()); }
	(rule__SelectStatement__Group_12__0)?
	{ after(grammarAccess.getSelectStatementAccess().getGroup_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getRightCurlyBracketKeyword_13()); }
	'}'
	{ after(grammarAccess.getSelectStatementAccess().getRightCurlyBracketKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_1__0__Impl
	rule__SelectStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getCaculateConditionAssignment_1_0()); }
	(rule__SelectStatement__CaculateConditionAssignment_1_0)
	{ after(grammarAccess.getSelectStatementAccess().getCaculateConditionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getOfKeyword_1_1()); }
	'of'
	{ after(grammarAccess.getSelectStatementAccess().getOfKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_11__0__Impl
	rule__SelectStatement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getOrderByKeyword_11_0()); }
	'order by'
	{ after(grammarAccess.getSelectStatementAccess().getOrderByKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_11__1__Impl
	rule__SelectStatement__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getLeftCurlyBracketKeyword_11_1()); }
	'{'
	{ after(grammarAccess.getSelectStatementAccess().getLeftCurlyBracketKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getGroup_11_2()); }
	(rule__SelectStatement__Group_11_2__0)*
	{ after(grammarAccess.getSelectStatementAccess().getGroup_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_11_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_11_2__0__Impl
	rule__SelectStatement__Group_11_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getColumnNameKeyword_11_2_0()); }
	'Column Name:'
	{ after(grammarAccess.getSelectStatementAccess().getColumnNameKeyword_11_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_11_2__1__Impl
	rule__SelectStatement__Group_11_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getCondition1Assignment_11_2_1()); }
	(rule__SelectStatement__Condition1Assignment_11_2_1)*
	{ after(grammarAccess.getSelectStatementAccess().getCondition1Assignment_11_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_11_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_11_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getCommaKeyword_11_2_2()); }
	(',')?
	{ after(grammarAccess.getSelectStatementAccess().getCommaKeyword_11_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectStatement__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_12__0__Impl
	rule__SelectStatement__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getSortedInKeyword_12_0()); }
	'sorted in'
	{ after(grammarAccess.getSelectStatementAccess().getSortedInKeyword_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectStatement__Group_12__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectStatementAccess().getOrderAssignment_12_1()); }
	(rule__SelectStatement__OrderAssignment_12_1)
	{ after(grammarAccess.getSelectStatementAccess().getOrderAssignment_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionStatement__Group__0__Impl
	rule__ConditionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionStatementAccess().getColumnNameKeyword_0()); }
	'Column Name:'
	{ after(grammarAccess.getConditionStatementAccess().getColumnNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionStatement__Group__1__Impl
	rule__ConditionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionStatementAccess().getColumnAssignment_1()); }
	(rule__ConditionStatement__ColumnAssignment_1)
	{ after(grammarAccess.getConditionStatementAccess().getColumnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionStatement__Group__2__Impl
	rule__ConditionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionStatementAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getConditionStatementAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionStatement__Group__3__Impl
	rule__ConditionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionStatementAccess().getValueAssignment_3()); }
	(rule__ConditionStatement__ValueAssignment_3)
	{ after(grammarAccess.getConditionStatementAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionStatementAccess().getCommaKeyword_4()); }
	(',')?
	{ after(grammarAccess.getConditionStatementAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LobsterProgram__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLobsterProgramAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getLobsterProgramAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableCharacterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableCharacterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableCharacter__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableCharacterAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getVariableCharacterAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateDatabaseStatement__DbnameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateDatabaseStatementAccess().getDbnamePrimaryExpressionParserRuleCall_4_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getCreateDatabaseStatementAccess().getDbnamePrimaryExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__TbnameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateTableStatementAccess().getTbnamePrimaryExpressionParserRuleCall_4_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getCreateTableStatementAccess().getTbnamePrimaryExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__DbnameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateTableStatementAccess().getDbnamePrimaryExpressionParserRuleCall_6_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getCreateTableStatementAccess().getDbnamePrimaryExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableStatement__ColumnsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateTableStatementAccess().getColumnsCreateTableColumnParserRuleCall_9_0()); }
		ruleCreateTableColumn
		{ after(grammarAccess.getCreateTableStatementAccess().getColumnsCreateTableColumnParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__ColumnNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateTableColumnAccess().getColumnNamePrimaryExpressionParserRuleCall_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getCreateTableColumnAccess().getColumnNamePrimaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__DatatypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateTableColumnAccess().getDatatypeDataTypeEnumRuleCall_3_0()); }
		ruleDataType
		{ after(grammarAccess.getCreateTableColumnAccess().getDatatypeDataTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTableColumn__SizeAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateTableColumnAccess().getSizeIntLiteralParserRuleCall_5_2_0()); }
		ruleIntLiteral
		{ after(grammarAccess.getCreateTableColumnAccess().getSizeIntLiteralParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ColumnAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getColumnPrimaryExpressionParserRuleCall_3_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getInsertStatementAccess().getColumnPrimaryExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__ValueAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getValuePrimaryExpressionParserRuleCall_3_3_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getInsertStatementAccess().getValuePrimaryExpressionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertStatement__TbnameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertStatementAccess().getTbnamePrimaryExpressionParserRuleCall_6_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getInsertStatementAccess().getTbnamePrimaryExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteDataStatementAccess().getConditionMoreConditionStatementParserRuleCall_2_0()); }
		ruleMoreConditionStatement
		{ after(grammarAccess.getDeleteDataStatementAccess().getConditionMoreConditionStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteDataStatement__TbnameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteDataStatementAccess().getTbnamePrimaryExpressionParserRuleCall_6_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getDeleteDataStatementAccess().getTbnamePrimaryExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__ColumnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoreConditionStatementAccess().getColumnPrimaryExpressionParserRuleCall_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getMoreConditionStatementAccess().getColumnPrimaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoreConditionStatementAccess().getValuePrimaryExpressionParserRuleCall_3_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getMoreConditionStatementAccess().getValuePrimaryExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MoreConditionStatement__MoreconditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMoreConditionStatementAccess().getMoreconditionMoreConditionEnumRuleCall_4_0()); }
		ruleMoreCondition
		{ after(grammarAccess.getMoreConditionStatementAccess().getMoreconditionMoreConditionEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteTableStatement__TbnameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteTableStatementAccess().getTbnamePrimaryExpressionParserRuleCall_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getDeleteTableStatementAccess().getTbnamePrimaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__TbnameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getTbnamePrimaryExpressionParserRuleCall_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUpdateStatementAccess().getTbnamePrimaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__SetvalueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getSetvalueConditionStatementParserRuleCall_5_0()); }
		ruleConditionStatement
		{ after(grammarAccess.getUpdateStatementAccess().getSetvalueConditionStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateStatement__ConditionAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateStatementAccess().getConditionConditionStatementParserRuleCall_9_0()); }
		ruleConditionStatement
		{ after(grammarAccess.getUpdateStatementAccess().getConditionConditionStatementParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__CaculateConditionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getCaculateConditionCaculateConditionEnumRuleCall_1_0_0()); }
		ruleCaculateCondition
		{ after(grammarAccess.getSelectStatementAccess().getCaculateConditionCaculateConditionEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getColumnPrimaryExpressionParserRuleCall_3_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getSelectStatementAccess().getColumnPrimaryExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__ConditionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getConditionConditionStatementParserRuleCall_6_0()); }
		ruleConditionStatement
		{ after(grammarAccess.getSelectStatementAccess().getConditionConditionStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__TbnameAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getTbnamePrimaryExpressionParserRuleCall_10_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getSelectStatementAccess().getTbnamePrimaryExpressionParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__Condition1Assignment_11_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getCondition1PrimaryExpressionParserRuleCall_11_2_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getSelectStatementAccess().getCondition1PrimaryExpressionParserRuleCall_11_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectStatement__OrderAssignment_12_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectStatementAccess().getOrderOrderEnumRuleCall_12_1_0()); }
		ruleOrder
		{ after(grammarAccess.getSelectStatementAccess().getOrderOrderEnumRuleCall_12_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__ColumnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionStatementAccess().getColumnPrimaryExpressionParserRuleCall_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getConditionStatementAccess().getColumnPrimaryExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionStatement__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionStatementAccess().getValuePrimaryExpressionParserRuleCall_3_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getConditionStatementAccess().getValuePrimaryExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__VacAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharLiteralAccess().getVacSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getCharLiteralAccess().getVacSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntLiteralAccess().getValINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VarAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableReferenceAccess().getVarVariableCharacterCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableReferenceAccess().getVarVariableCharacterIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableReferenceAccess().getVarVariableCharacterIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableReferenceAccess().getVarVariableCharacterCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
