/**
 * generated by Xtext 2.24.0
 */
package kcl.mmdd.course.languages.lobster.lobsterLanguages;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.LobsterLanguagesFactory
 * @model kind="package"
 * @generated
 */
public interface LobsterLanguagesPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "lobsterLanguages";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.mmdd.kcl/course/languages/lobster/LobsterLanguages";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "lobsterLanguages";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LobsterLanguagesPackage eINSTANCE = kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl.init();

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterProgramImpl <em>Lobster Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterProgramImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getLobsterProgram()
   * @generated
   */
  int LOBSTER_PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOBSTER_PROGRAM__STATEMENTS = 0;

  /**
   * The number of structural features of the '<em>Lobster Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOBSTER_PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.StatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 1;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableCharacterImpl <em>Variable Character</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableCharacterImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getVariableCharacter()
   * @generated
   */
  int VARIABLE_CHARACTER = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_CHARACTER__NAME = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_CHARACTER__VALUE = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Variable Character</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_CHARACTER_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateDatabaseStatementImpl <em>Create Database Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateDatabaseStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCreateDatabaseStatement()
   * @generated
   */
  int CREATE_DATABASE_STATEMENT = 3;

  /**
   * The feature id for the '<em><b>Dbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_DATABASE_STATEMENT__DBNAME = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Create Database Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_DATABASE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableStatementImpl <em>Create Table Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCreateTableStatement()
   * @generated
   */
  int CREATE_TABLE_STATEMENT = 4;

  /**
   * The feature id for the '<em><b>Tbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_STATEMENT__TBNAME = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Dbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_STATEMENT__DBNAME = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Columns</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_STATEMENT__COLUMNS = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Create Table Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableColumnImpl <em>Create Table Column</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableColumnImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCreateTableColumn()
   * @generated
   */
  int CREATE_TABLE_COLUMN = 5;

  /**
   * The feature id for the '<em><b>Column Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_COLUMN__COLUMN_NAME = 0;

  /**
   * The feature id for the '<em><b>Datatype</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_COLUMN__DATATYPE = 1;

  /**
   * The feature id for the '<em><b>Size</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_COLUMN__SIZE = 2;

  /**
   * The number of structural features of the '<em>Create Table Column</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CREATE_TABLE_COLUMN_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.InsertStatementImpl <em>Insert Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.InsertStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getInsertStatement()
   * @generated
   */
  int INSERT_STATEMENT = 6;

  /**
   * The feature id for the '<em><b>Column</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_STATEMENT__COLUMN = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_STATEMENT__VALUE = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Tbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_STATEMENT__TBNAME = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Insert Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteDataStatementImpl <em>Delete Data Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteDataStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getDeleteDataStatement()
   * @generated
   */
  int DELETE_DATA_STATEMENT = 7;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_DATA_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Tbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_DATA_STATEMENT__TBNAME = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Delete Data Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_DATA_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.MoreConditionStatementImpl <em>More Condition Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.MoreConditionStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getMoreConditionStatement()
   * @generated
   */
  int MORE_CONDITION_STATEMENT = 8;

  /**
   * The feature id for the '<em><b>Column</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MORE_CONDITION_STATEMENT__COLUMN = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MORE_CONDITION_STATEMENT__VALUE = 1;

  /**
   * The feature id for the '<em><b>Morecondition</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MORE_CONDITION_STATEMENT__MORECONDITION = 2;

  /**
   * The number of structural features of the '<em>More Condition Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MORE_CONDITION_STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteTableStatementImpl <em>Delete Table Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteTableStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getDeleteTableStatement()
   * @generated
   */
  int DELETE_TABLE_STATEMENT = 9;

  /**
   * The feature id for the '<em><b>Tbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_TABLE_STATEMENT__TBNAME = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Delete Table Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_TABLE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.UpdateStatementImpl <em>Update Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.UpdateStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getUpdateStatement()
   * @generated
   */
  int UPDATE_STATEMENT = 10;

  /**
   * The feature id for the '<em><b>Tbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPDATE_STATEMENT__TBNAME = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Setvalue</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPDATE_STATEMENT__SETVALUE = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPDATE_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Update Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPDATE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.SelectStatementImpl <em>Select Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.SelectStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getSelectStatement()
   * @generated
   */
  int SELECT_STATEMENT = 11;

  /**
   * The feature id for the '<em><b>Caculate Condition</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_STATEMENT__CACULATE_CONDITION = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Column</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_STATEMENT__COLUMN = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Tbname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_STATEMENT__TBNAME = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Condition1</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_STATEMENT__CONDITION1 = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Order</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_STATEMENT__ORDER = STATEMENT_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Select Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.ConditionStatementImpl <em>Condition Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.ConditionStatementImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getConditionStatement()
   * @generated
   */
  int CONDITION_STATEMENT = 12;

  /**
   * The feature id for the '<em><b>Column</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_STATEMENT__COLUMN = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_STATEMENT__VALUE = 1;

  /**
   * The number of structural features of the '<em>Condition Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.PrimaryExpressionImpl <em>Primary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.PrimaryExpressionImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getPrimaryExpression()
   * @generated
   */
  int PRIMARY_EXPRESSION = 13;

  /**
   * The number of structural features of the '<em>Primary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CharLiteralImpl <em>Char Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CharLiteralImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCharLiteral()
   * @generated
   */
  int CHAR_LITERAL = 14;

  /**
   * The feature id for the '<em><b>Vac</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAR_LITERAL__VAC = PRIMARY_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Char Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAR_LITERAL_FEATURE_COUNT = PRIMARY_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.IntLiteralImpl <em>Int Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.IntLiteralImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getIntLiteral()
   * @generated
   */
  int INT_LITERAL = 15;

  /**
   * The feature id for the '<em><b>Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_LITERAL__VAL = PRIMARY_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Int Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INT_LITERAL_FEATURE_COUNT = PRIMARY_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableReferenceImpl <em>Variable Reference</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableReferenceImpl
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getVariableReference()
   * @generated
   */
  int VARIABLE_REFERENCE = 16;

  /**
   * The feature id for the '<em><b>Var</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REFERENCE__VAR = PRIMARY_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Variable Reference</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_REFERENCE_FEATURE_COUNT = PRIMARY_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DataType <em>Data Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DataType
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getDataType()
   * @generated
   */
  int DATA_TYPE = 17;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreCondition <em>More Condition</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreCondition
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getMoreCondition()
   * @generated
   */
  int MORE_CONDITION = 18;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CaculateCondition <em>Caculate Condition</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CaculateCondition
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCaculateCondition()
   * @generated
   */
  int CACULATE_CONDITION = 19;

  /**
   * The meta object id for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.Order <em>Order</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.Order
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getOrder()
   * @generated
   */
  int ORDER = 20;


  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.LobsterProgram <em>Lobster Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lobster Program</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.LobsterProgram
   * @generated
   */
  EClass getLobsterProgram();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.LobsterProgram#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.LobsterProgram#getStatements()
   * @see #getLobsterProgram()
   * @generated
   */
  EReference getLobsterProgram_Statements();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableCharacter <em>Variable Character</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Character</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableCharacter
   * @generated
   */
  EClass getVariableCharacter();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableCharacter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableCharacter#getName()
   * @see #getVariableCharacter()
   * @generated
   */
  EAttribute getVariableCharacter_Name();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableCharacter#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableCharacter#getValue()
   * @see #getVariableCharacter()
   * @generated
   */
  EAttribute getVariableCharacter_Value();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateDatabaseStatement <em>Create Database Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create Database Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateDatabaseStatement
   * @generated
   */
  EClass getCreateDatabaseStatement();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateDatabaseStatement#getDbname <em>Dbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Dbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateDatabaseStatement#getDbname()
   * @see #getCreateDatabaseStatement()
   * @generated
   */
  EReference getCreateDatabaseStatement_Dbname();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement <em>Create Table Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create Table Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement
   * @generated
   */
  EClass getCreateTableStatement();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement#getTbname <em>Tbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement#getTbname()
   * @see #getCreateTableStatement()
   * @generated
   */
  EReference getCreateTableStatement_Tbname();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement#getDbname <em>Dbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Dbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement#getDbname()
   * @see #getCreateTableStatement()
   * @generated
   */
  EReference getCreateTableStatement_Dbname();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement#getColumns <em>Columns</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Columns</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableStatement#getColumns()
   * @see #getCreateTableStatement()
   * @generated
   */
  EReference getCreateTableStatement_Columns();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn <em>Create Table Column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Create Table Column</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn
   * @generated
   */
  EClass getCreateTableColumn();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn#getColumnName <em>Column Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Column Name</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn#getColumnName()
   * @see #getCreateTableColumn()
   * @generated
   */
  EReference getCreateTableColumn_ColumnName();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn#getDatatype <em>Datatype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Datatype</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn#getDatatype()
   * @see #getCreateTableColumn()
   * @generated
   */
  EAttribute getCreateTableColumn_Datatype();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn#getSize <em>Size</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Size</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CreateTableColumn#getSize()
   * @see #getCreateTableColumn()
   * @generated
   */
  EReference getCreateTableColumn_Size();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement <em>Insert Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Insert Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement
   * @generated
   */
  EClass getInsertStatement();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement#getColumn <em>Column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Column</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement#getColumn()
   * @see #getInsertStatement()
   * @generated
   */
  EReference getInsertStatement_Column();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Value</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement#getValue()
   * @see #getInsertStatement()
   * @generated
   */
  EReference getInsertStatement_Value();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement#getTbname <em>Tbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.InsertStatement#getTbname()
   * @see #getInsertStatement()
   * @generated
   */
  EReference getInsertStatement_Tbname();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteDataStatement <em>Delete Data Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delete Data Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteDataStatement
   * @generated
   */
  EClass getDeleteDataStatement();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteDataStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Condition</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteDataStatement#getCondition()
   * @see #getDeleteDataStatement()
   * @generated
   */
  EReference getDeleteDataStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteDataStatement#getTbname <em>Tbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteDataStatement#getTbname()
   * @see #getDeleteDataStatement()
   * @generated
   */
  EReference getDeleteDataStatement_Tbname();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement <em>More Condition Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>More Condition Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement
   * @generated
   */
  EClass getMoreConditionStatement();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement#getColumn <em>Column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Column</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement#getColumn()
   * @see #getMoreConditionStatement()
   * @generated
   */
  EReference getMoreConditionStatement_Column();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement#getValue()
   * @see #getMoreConditionStatement()
   * @generated
   */
  EReference getMoreConditionStatement_Value();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement#getMorecondition <em>Morecondition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Morecondition</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreConditionStatement#getMorecondition()
   * @see #getMoreConditionStatement()
   * @generated
   */
  EAttribute getMoreConditionStatement_Morecondition();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteTableStatement <em>Delete Table Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delete Table Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteTableStatement
   * @generated
   */
  EClass getDeleteTableStatement();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteTableStatement#getTbname <em>Tbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DeleteTableStatement#getTbname()
   * @see #getDeleteTableStatement()
   * @generated
   */
  EReference getDeleteTableStatement_Tbname();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement <em>Update Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Update Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement
   * @generated
   */
  EClass getUpdateStatement();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement#getTbname <em>Tbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement#getTbname()
   * @see #getUpdateStatement()
   * @generated
   */
  EReference getUpdateStatement_Tbname();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement#getSetvalue <em>Setvalue</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Setvalue</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement#getSetvalue()
   * @see #getUpdateStatement()
   * @generated
   */
  EReference getUpdateStatement_Setvalue();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Condition</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.UpdateStatement#getCondition()
   * @see #getUpdateStatement()
   * @generated
   */
  EReference getUpdateStatement_Condition();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement <em>Select Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Select Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement
   * @generated
   */
  EClass getSelectStatement();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getCaculateCondition <em>Caculate Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Caculate Condition</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getCaculateCondition()
   * @see #getSelectStatement()
   * @generated
   */
  EAttribute getSelectStatement_CaculateCondition();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getColumn <em>Column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Column</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getColumn()
   * @see #getSelectStatement()
   * @generated
   */
  EReference getSelectStatement_Column();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Condition</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getCondition()
   * @see #getSelectStatement()
   * @generated
   */
  EReference getSelectStatement_Condition();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getTbname <em>Tbname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tbname</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getTbname()
   * @see #getSelectStatement()
   * @generated
   */
  EReference getSelectStatement_Tbname();

  /**
   * Returns the meta object for the containment reference list '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getCondition1 <em>Condition1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Condition1</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getCondition1()
   * @see #getSelectStatement()
   * @generated
   */
  EReference getSelectStatement_Condition1();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getOrder <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Order</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.SelectStatement#getOrder()
   * @see #getSelectStatement()
   * @generated
   */
  EAttribute getSelectStatement_Order();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.ConditionStatement <em>Condition Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Condition Statement</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.ConditionStatement
   * @generated
   */
  EClass getConditionStatement();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.ConditionStatement#getColumn <em>Column</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Column</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.ConditionStatement#getColumn()
   * @see #getConditionStatement()
   * @generated
   */
  EReference getConditionStatement_Column();

  /**
   * Returns the meta object for the containment reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.ConditionStatement#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.ConditionStatement#getValue()
   * @see #getConditionStatement()
   * @generated
   */
  EReference getConditionStatement_Value();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.PrimaryExpression <em>Primary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Expression</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.PrimaryExpression
   * @generated
   */
  EClass getPrimaryExpression();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CharLiteral <em>Char Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Char Literal</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CharLiteral
   * @generated
   */
  EClass getCharLiteral();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CharLiteral#getVac <em>Vac</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Vac</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CharLiteral#getVac()
   * @see #getCharLiteral()
   * @generated
   */
  EAttribute getCharLiteral_Vac();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.IntLiteral <em>Int Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Int Literal</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.IntLiteral
   * @generated
   */
  EClass getIntLiteral();

  /**
   * Returns the meta object for the attribute '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.IntLiteral#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.IntLiteral#getVal()
   * @see #getIntLiteral()
   * @generated
   */
  EAttribute getIntLiteral_Val();

  /**
   * Returns the meta object for class '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableReference <em>Variable Reference</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable Reference</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableReference
   * @generated
   */
  EClass getVariableReference();

  /**
   * Returns the meta object for the reference '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableReference#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.VariableReference#getVar()
   * @see #getVariableReference()
   * @generated
   */
  EReference getVariableReference_Var();

  /**
   * Returns the meta object for enum '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DataType <em>Data Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Data Type</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DataType
   * @generated
   */
  EEnum getDataType();

  /**
   * Returns the meta object for enum '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreCondition <em>More Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>More Condition</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreCondition
   * @generated
   */
  EEnum getMoreCondition();

  /**
   * Returns the meta object for enum '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CaculateCondition <em>Caculate Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Caculate Condition</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CaculateCondition
   * @generated
   */
  EEnum getCaculateCondition();

  /**
   * Returns the meta object for enum '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.Order <em>Order</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Order</em>'.
   * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.Order
   * @generated
   */
  EEnum getOrder();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LobsterLanguagesFactory getLobsterLanguagesFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterProgramImpl <em>Lobster Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterProgramImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getLobsterProgram()
     * @generated
     */
    EClass LOBSTER_PROGRAM = eINSTANCE.getLobsterProgram();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOBSTER_PROGRAM__STATEMENTS = eINSTANCE.getLobsterProgram_Statements();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.StatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableCharacterImpl <em>Variable Character</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableCharacterImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getVariableCharacter()
     * @generated
     */
    EClass VARIABLE_CHARACTER = eINSTANCE.getVariableCharacter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_CHARACTER__NAME = eINSTANCE.getVariableCharacter_Name();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_CHARACTER__VALUE = eINSTANCE.getVariableCharacter_Value();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateDatabaseStatementImpl <em>Create Database Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateDatabaseStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCreateDatabaseStatement()
     * @generated
     */
    EClass CREATE_DATABASE_STATEMENT = eINSTANCE.getCreateDatabaseStatement();

    /**
     * The meta object literal for the '<em><b>Dbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE_DATABASE_STATEMENT__DBNAME = eINSTANCE.getCreateDatabaseStatement_Dbname();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableStatementImpl <em>Create Table Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCreateTableStatement()
     * @generated
     */
    EClass CREATE_TABLE_STATEMENT = eINSTANCE.getCreateTableStatement();

    /**
     * The meta object literal for the '<em><b>Tbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE_TABLE_STATEMENT__TBNAME = eINSTANCE.getCreateTableStatement_Tbname();

    /**
     * The meta object literal for the '<em><b>Dbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE_TABLE_STATEMENT__DBNAME = eINSTANCE.getCreateTableStatement_Dbname();

    /**
     * The meta object literal for the '<em><b>Columns</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE_TABLE_STATEMENT__COLUMNS = eINSTANCE.getCreateTableStatement_Columns();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableColumnImpl <em>Create Table Column</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CreateTableColumnImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCreateTableColumn()
     * @generated
     */
    EClass CREATE_TABLE_COLUMN = eINSTANCE.getCreateTableColumn();

    /**
     * The meta object literal for the '<em><b>Column Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE_TABLE_COLUMN__COLUMN_NAME = eINSTANCE.getCreateTableColumn_ColumnName();

    /**
     * The meta object literal for the '<em><b>Datatype</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CREATE_TABLE_COLUMN__DATATYPE = eINSTANCE.getCreateTableColumn_Datatype();

    /**
     * The meta object literal for the '<em><b>Size</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CREATE_TABLE_COLUMN__SIZE = eINSTANCE.getCreateTableColumn_Size();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.InsertStatementImpl <em>Insert Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.InsertStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getInsertStatement()
     * @generated
     */
    EClass INSERT_STATEMENT = eINSTANCE.getInsertStatement();

    /**
     * The meta object literal for the '<em><b>Column</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INSERT_STATEMENT__COLUMN = eINSTANCE.getInsertStatement_Column();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INSERT_STATEMENT__VALUE = eINSTANCE.getInsertStatement_Value();

    /**
     * The meta object literal for the '<em><b>Tbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INSERT_STATEMENT__TBNAME = eINSTANCE.getInsertStatement_Tbname();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteDataStatementImpl <em>Delete Data Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteDataStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getDeleteDataStatement()
     * @generated
     */
    EClass DELETE_DATA_STATEMENT = eINSTANCE.getDeleteDataStatement();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELETE_DATA_STATEMENT__CONDITION = eINSTANCE.getDeleteDataStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Tbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELETE_DATA_STATEMENT__TBNAME = eINSTANCE.getDeleteDataStatement_Tbname();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.MoreConditionStatementImpl <em>More Condition Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.MoreConditionStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getMoreConditionStatement()
     * @generated
     */
    EClass MORE_CONDITION_STATEMENT = eINSTANCE.getMoreConditionStatement();

    /**
     * The meta object literal for the '<em><b>Column</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MORE_CONDITION_STATEMENT__COLUMN = eINSTANCE.getMoreConditionStatement_Column();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MORE_CONDITION_STATEMENT__VALUE = eINSTANCE.getMoreConditionStatement_Value();

    /**
     * The meta object literal for the '<em><b>Morecondition</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MORE_CONDITION_STATEMENT__MORECONDITION = eINSTANCE.getMoreConditionStatement_Morecondition();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteTableStatementImpl <em>Delete Table Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.DeleteTableStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getDeleteTableStatement()
     * @generated
     */
    EClass DELETE_TABLE_STATEMENT = eINSTANCE.getDeleteTableStatement();

    /**
     * The meta object literal for the '<em><b>Tbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELETE_TABLE_STATEMENT__TBNAME = eINSTANCE.getDeleteTableStatement_Tbname();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.UpdateStatementImpl <em>Update Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.UpdateStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getUpdateStatement()
     * @generated
     */
    EClass UPDATE_STATEMENT = eINSTANCE.getUpdateStatement();

    /**
     * The meta object literal for the '<em><b>Tbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UPDATE_STATEMENT__TBNAME = eINSTANCE.getUpdateStatement_Tbname();

    /**
     * The meta object literal for the '<em><b>Setvalue</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UPDATE_STATEMENT__SETVALUE = eINSTANCE.getUpdateStatement_Setvalue();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UPDATE_STATEMENT__CONDITION = eINSTANCE.getUpdateStatement_Condition();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.SelectStatementImpl <em>Select Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.SelectStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getSelectStatement()
     * @generated
     */
    EClass SELECT_STATEMENT = eINSTANCE.getSelectStatement();

    /**
     * The meta object literal for the '<em><b>Caculate Condition</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SELECT_STATEMENT__CACULATE_CONDITION = eINSTANCE.getSelectStatement_CaculateCondition();

    /**
     * The meta object literal for the '<em><b>Column</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECT_STATEMENT__COLUMN = eINSTANCE.getSelectStatement_Column();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECT_STATEMENT__CONDITION = eINSTANCE.getSelectStatement_Condition();

    /**
     * The meta object literal for the '<em><b>Tbname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECT_STATEMENT__TBNAME = eINSTANCE.getSelectStatement_Tbname();

    /**
     * The meta object literal for the '<em><b>Condition1</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECT_STATEMENT__CONDITION1 = eINSTANCE.getSelectStatement_Condition1();

    /**
     * The meta object literal for the '<em><b>Order</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SELECT_STATEMENT__ORDER = eINSTANCE.getSelectStatement_Order();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.ConditionStatementImpl <em>Condition Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.ConditionStatementImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getConditionStatement()
     * @generated
     */
    EClass CONDITION_STATEMENT = eINSTANCE.getConditionStatement();

    /**
     * The meta object literal for the '<em><b>Column</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITION_STATEMENT__COLUMN = eINSTANCE.getConditionStatement_Column();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITION_STATEMENT__VALUE = eINSTANCE.getConditionStatement_Value();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.PrimaryExpressionImpl <em>Primary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.PrimaryExpressionImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getPrimaryExpression()
     * @generated
     */
    EClass PRIMARY_EXPRESSION = eINSTANCE.getPrimaryExpression();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CharLiteralImpl <em>Char Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.CharLiteralImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCharLiteral()
     * @generated
     */
    EClass CHAR_LITERAL = eINSTANCE.getCharLiteral();

    /**
     * The meta object literal for the '<em><b>Vac</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAR_LITERAL__VAC = eINSTANCE.getCharLiteral_Vac();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.IntLiteralImpl <em>Int Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.IntLiteralImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getIntLiteral()
     * @generated
     */
    EClass INT_LITERAL = eINSTANCE.getIntLiteral();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INT_LITERAL__VAL = eINSTANCE.getIntLiteral_Val();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableReferenceImpl <em>Variable Reference</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.VariableReferenceImpl
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getVariableReference()
     * @generated
     */
    EClass VARIABLE_REFERENCE = eINSTANCE.getVariableReference();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_REFERENCE__VAR = eINSTANCE.getVariableReference_Var();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.DataType <em>Data Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.DataType
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getDataType()
     * @generated
     */
    EEnum DATA_TYPE = eINSTANCE.getDataType();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreCondition <em>More Condition</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.MoreCondition
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getMoreCondition()
     * @generated
     */
    EEnum MORE_CONDITION = eINSTANCE.getMoreCondition();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.CaculateCondition <em>Caculate Condition</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.CaculateCondition
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getCaculateCondition()
     * @generated
     */
    EEnum CACULATE_CONDITION = eINSTANCE.getCaculateCondition();

    /**
     * The meta object literal for the '{@link kcl.mmdd.course.languages.lobster.lobsterLanguages.Order <em>Order</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.Order
     * @see kcl.mmdd.course.languages.lobster.lobsterLanguages.impl.LobsterLanguagesPackageImpl#getOrder()
     * @generated
     */
    EEnum ORDER = eINSTANCE.getOrder();

  }

} //LobsterLanguagesPackage
